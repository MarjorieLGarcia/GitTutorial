DevMarket Tutorial 
https://www.youtube.com/watch?v=WS8whF0ZK-o&list=PLwAKR305CRO-fenwcN2-IC0rgaB6vaJgD

Traversy Media : Git & GitHub Course for Beginners
https://www.youtube.com/watch?v=SWYqp7iY_Tc

#Global config
#List all config settings
$git config -l

#Config your global settings
$git config --global user.name "First and Last Name"
$git config --global user.email username@gmail.com

#Go to Desktop
$cd Desktop

#Create a directory
$mkdir Gitting_Started

#Initialized git
$git init

#Check the status of git
$git status

#Create a file inside directory
$touch readme.md file.txt

#Open the file and edit through command line
$vi <file>
//To edit -->ESC  i
//Saved and exit -->ESC : wq

#Add project changed
$git add <file>
or
$git add .  //Add everything
or
$git add --all //Add everything

#Commit changes to the repo
$git commit -m "Messages"

#Print history of commits
$git log

$To ignore file(s) on the commit step
$touch .gitignore
$vi .gitignore
//saved inside all the files you want to ignore
//Github Reference --> https://github.vom/github/gitignore

#Push an exiting repository from command line
$git remote add <name> <url>
$git push -u <name> <branch name>  // -u mean make it as a default
$git remote  //Will list all your remote repos

#Adding ssh key in local machine
$ssh-keygen -t rsa -b 4096 -C "<github emial>"
//-t --> Type. In this case rsa <optional>
//-b --> Bytes. In this example 4096 <optional>
//-C --> User email. Use the same email address as github user <optional>
//Accept the default location to save the key
//Choose a phrase as a passphrase, it's optional but recommended

#Adding the ssh key to the ssh agent
$eval "$(ssh-agent -s)"  // This will show us the pid agent number. Just for confirmation purpose.
$ssh-add ~/.ssh/id_rsa  //Now we are adding to the ssh agent 

#Add the ssh key into github
//Open your id_rsa.pub file with any text editor. Copy all the content.
//On your github account, go to Settings -> SSH and GPG keys
//Click new SSH key button, type a title and paste your ssh key content and add SSH key. 

#Rollback a file from the commit stage
$git rm --cached <file name>  

#Create a new branch
$git branch <branch name>

#Switch and list branches
$git checkout <other branch name>  //Switch between branches
$git branch  //Will list all branches in your project

#Merge from one branch to other
$git merge <branch name>  //Where changes came from. 

#Push a local branch into the remote repo
$git push --set-upstream <remote name> <branch name>  //this line will be require just the first time
